<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!--
    Center of buoyancy according to eq. (3.1) p. 28 in Berg2012.
    The original values, [0.0822, -0.00773, 0.3872] however, seem to
    assume NWU (otherwise cob is below cog?).
    -->
    
    <xacro:property name="volume" value="0.00005"/>
    <!-- <xacro:property name="volume" value="0.00005"/> -->

    <xacro:property name="M_PI" value="3.1415926535897931" />


    <gazebo reference="base_scan">
        <material>Gazebo/FlatBlack</material>
        <sensor type="ray" name="VLP-16-VLP16-Simplified">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>500</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>20</samples>
                    <resolution>1</resolution>
                    <min_angle>-${3*M_PI/4}</min_angle>
                    <max_angle>${3*M_PI/4}</max_angle>
                    <min_angle>0</min_angle>
                    <max_angle>${2*M_PI - M_PI/4}</max_angle>
                </horizontal>
            </scan>
            <range>
            <min>0.5</min>
            <max>10.0</max>
            <resolution>0.015</resolution>
            </range>
            <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.0</stddev>
            </noise>
        </ray>
        <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
            <topicName>scan</topicName>
            <frameName>base_scan</frameName>
        </plugin>
        </sensor>
    </gazebo>
    
    <gazebo reference="camera_link">
    <sensor type="depth" name="kinect">
      <pose>0 0 0 0 0 0</pose>
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <!-- Keep this zero, update_rate in the parent <sensor> tag
            will control the frame rate. -->
          <updateRate>0.0</updateRate>
          <cameraName>haubentaucher_camera</cameraName>
          <imageTopicName>/haubentaucher/camera/rgb/image_raw</imageTopicName>
          <cameraInfoTopicName>/haubentaucher/camera/rgb/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/haubentaucher/camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>/haubentaucher/camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>/haubentaucher/camera/depth/points</pointCloudTopicName>
          <frameName>camera_link</frameName>
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
    </sensor>
  </gazebo>

</robot>
