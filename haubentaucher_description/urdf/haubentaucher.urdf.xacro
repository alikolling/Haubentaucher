<?xml version="1.0"?>
<robot name="haubentaucher" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:property name="namespace" value="haubentaucher" />
    <xacro:property name="max_range" value="8.0"/>
    <xacro:arg name="inertial_reference_frame" default="world"/>
    <xacro:arg name="debug" default="0"/>
    <!-- Collision bitmask - By default collides with everything -->
    <xacro:arg name="collision_bitmask" default="-1" />
    <xacro:property name="collision_bitmask" value="$(arg collision_bitmask)" />
    <xacro:include filename="$(find uuv_descriptions)/urdf/common.urdf.xacro"/>
    <xacro:include filename="$(find uuv_sensor_ros_plugins)/urdf/sensor_snippets.xacro"/>
    <xacro:include filename="$(find uuv_gazebo_ros_plugins)/urdf/snippets.xacro"/> 
    <!-- Instantiate kopterworx mechanics "mechanics" -->
    <xacro:include filename="$(find haubentaucher_description)/urdf/haubentaucher_base.urdf.xacro" />
    <xacro:include filename="$(find haubentaucher_description)/urdf/haubentaucher_sensors.urdf.xacro" />
    <xacro:include filename="$(find rotors_description)/urdf/component_snippets.xacro" />
    <!--<xacro:include filename="$(find haubentaucher_description)/urdf/haubentaucher_actuators.xacro"/>-->
    <xacro:include filename="$(find haubentaucher_description)/urdf/haubentaucher.gazebo.xacro"/>
    
    <!-- Create the rexrov -->
    <xacro:haubentaucher_base
        namespace="$(arg namespace)"
        inertial_reference_frame="$(arg inertial_reference_frame)">
        <!-- The underwater object plugin is given as an input block parameter to
         allow the addition of external models of manipulator units -->
        <gazebo>
            <plugin name="uuv_plugin" filename="libuuv_underwater_object_ros_plugin.so">
                <fluid_density>1028.0</fluid_density>
                <flow_velocity_topic>hydrodynamics/current_velocity</flow_velocity_topic>
                <debug>$(arg debug)</debug>
                <!-- Adding the hydrodynamic and hydrostatic parameters for the vehicle-->
                <xacro:haubentaucher_hydro_model namespace="$(arg namespace)"/>
            </plugin>
        </gazebo>
    </xacro:haubentaucher_base>

    <!-- Joint state publisher plugin -->
    <xacro:default_joint_state_publisher namespace="$(arg namespace)" update_rate="50"/>

    
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/$(arg namespace)</robotNamespace>
            <robotParam>/$(arg namespace)/robot_description </robotParam>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
        </plugin>
    </gazebo>
  

    <gazebo reference="${namespace}/base_link">      
        <material>Gazebo/White</material>
    </gazebo> 

    <!--Mount a generic odometry sensor without odometry map (working everywhere).-->
    <xacro:odometry_plugin_macro
        namespace="${namespace}"
        odometry_sensor_suffix="1"
        parent_link="${namespace}/base_link"
        pose_topic="odometry_sensor1/pose"
        pose_with_covariance_topic="odometry_sensor1/pose_with_covariance"
        position_topic="odometry_sensor1/position"
        transform_topic="odometry_sensor1/transform"
        odometry_topic="odometry_sensor1/odometry"
        parent_frame_id="world"
        child_frame_id="${namespace}/odometry_sensor1"
        mass_odometry_sensor="0.00001"
        measurement_divisor="1"
        measurement_delay="0"
        unknown_delay="0.0"
        noise_normal_position="0 0 0"
        noise_normal_quaternion="0 0 0"
        noise_normal_linear_velocity="0 0 0"
        noise_normal_angular_velocity="0 0 0"
        noise_uniform_position="0 0 0"
        noise_uniform_quaternion="0 0 0"
        noise_uniform_linear_velocity="0 0 0"
        noise_uniform_angular_velocity="0 0 0"
        enable_odometry_map="false"
        odometry_map=""
        image_scale="">
        <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />  <!-- [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] -->
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:odometry_plugin_macro>

    <arg name="enable_logging" default="false" />
    <arg name="enable_ground_truth" default="true" />
    <arg name="log_file" default="$(arg mav_name)" />

    <!-- Instantiate a controller. -->
    <xacro:controller_plugin_macro namespace="${namespace}" imu_sub_topic="imu" />

    <xacro:default_imu namespace="${namespace}" parent_link="${namespace}/base_link" />

    <xacro:ground_truth_imu_and_odometry namespace="${namespace}" parent_link="${namespace}/base_link" />-->
    
    <joint name="scan_joint" type="fixed">
      <parent link="${namespace}/base_link"/>
      <child link="base_scan"/>
      <origin xyz="0.0 0 0.05" rpy="0 0 0"/>
    </joint>

    <link name="base_scan">
      <visual>
        <origin xyz="0 0 0.005" rpy="0 ${pi} 0"/>
        <geometry>
          <mesh filename="package://hydrone_aerial_underwater_description/meshes/lds.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="dark"/>
      </visual>

      <collision>
        <origin xyz="0.015 0 -0.0065" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.0315" radius="0.055"/>
        </geometry>
      </collision>

      <inertial>
        <mass value="0.114" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                iyy="0.001" iyz="0.0"
                izz="0.001" />
      </inertial>
    </link>
    
    
    <joint name="camera_joint" type="fixed">
      <parent link="${namespace}/base_link"/>
      <child link="camera_link"/>
      <origin xyz="0.1 0 0.0" rpy="0 0 0"/>
    </joint>

    <link name="camera_link">
    </link>
    


</robot>
